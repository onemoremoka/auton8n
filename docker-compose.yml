volumes:
  db_storage:
  n8n_storage:

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    ports:
      - "5432:5432"
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./01-init-notifications.sql:/docker-entrypoint-initdb.d/01-init-notifications.sql
      - ./02-init-data.sh:/docker-entrypoint-initdb.d/02-init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      timeout: 5s
      retries: 10

  n8n:
      build:
        context: .
        dockerfile: Dockerfile
      restart: always
      environment:
        - DB_TYPE=postgresdb
        - DB_POSTGRESDB_HOST=postgres
        - DB_POSTGRESDB_PORT=5432
        - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
        - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
        - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      ports:
        - 5678:5678
      volumes:
        - n8n_storage:/home/node/.n8n
      depends_on:
        postgres:
          condition: service_healthy

  evolution-api:
    container_name: evolution_api
    image: atendai/evolution-api:v2.1.1
    restart: unless-stopped
    ports:
      - "8081:8080"
    volumes:
      - ./evolution_instances:/evolution/instances
      - ./evolution_store:/evolution/store
    env_file:
      - evolution.env
    expose:
      - 8081
    depends_on:
      - postgres
      - redis
  redis:
    image: "redis:6.2-alpine"
    ports:
      - "6379:6379"
